---
title: "Tutorial: creating a document from a table"
---

```{r, include = FALSE}
options(tidyverse.quiet = TRUE)
```

## Before you start

In this tutorial, we describe how to create an RSpace structured document from a delimited file format, such as Excel, TSV or CSV.
We advice you to read `vignette("rspacer")` to make sure that you are ready to use this upload document.
You need to install rspacer and set up your API url and API key before the start of this tutorial.

## Load R libraries

```{r}
library(tidyverse)
library(rspacer)
```

## Check if the API is available

This code checks if the API is available.
The API status should be OK.

```{r}
(res <- api_status())
stopifnot(res$message == "OK")
```

## Create a structured document in RSpace

Create a Template from a Form with four text Fields named "Title", "Date", "Main part" and "Conclusion".
Write down the unique Structured Document identifier, you will need it later.
For us, this identifier was `SD377682`.
Instructions to design a Template in RSpace can be found [here](https://documentation.researchspace.com/article/wxfk9gf0a0-templates).

## Create a small example document

Open Excel and create a csv file or run the code chunk below to create a small example file.
It should have two columns.
The first one should have all fields exactly the same as the template.
The second column should have the content of each field in the correct format.
If you use Excel, make sure that dates are saved as a string in the format dd-mm-yyyy.

```{r}
df_to_upload <- data.frame(
    name = c("Title", "Date", "Main part", "Conclusion"),
    content = c("example title", "23-12-2024", "This is example text.",
                "ready for uploading.")
  )
```

## Upload the data

To upload the data to the API inbox, this code chunk is sufficient and returns the created document.
It creates a document from your Template_example.csv.
The function works with CSV, TSV and XLSX file formats.
Make sure that the template_id is the identifier of the template that you previously made in RSpace.

```{r}
document_create_from_tabular(
    df = df_to_upload,
    template_id = "SD377682"
)
```

The function `document_create_from_tabular()` has more parameters, for example, to upload the document to a specified notebook or folder (click the function above to learn more).

How to find the values for these parameters?
Browse your RSpace folders using `folder_tree()` and use either the `id` or the `globalID`.
Folder identifiers start with `FL`, notebook identifiers start with `NB`, structured document identifiers start with `SD`.
For example:

```{r}
folder_tree()
folder_tree("FL409926")
```

Of course you can also find these by going to the web interface of your RSpace instance.
You can also tag your documents using a `tags` vector, for example a status like "finished" or "in progress" or "failed".
If you want to upload attachments to a field, use the `attachments` argument.
Files will be added in the number of the field as an attachment.
You can optionally replace an existing Document by specifying an `existing_file_id`.
Use this only if a file needs to be replaced instead of created.

In this example we add a Quarto code file and a HTML file Template_example.html as an attachment to the field with number 4.
We also place the file in a specific folder, and add the "tutorial" tag.

```{r}
attachment_file <- system.file("Template_example.html", package = "rspacer")
(matching_code_file <- fs::path_ext_set(attachment_file, ".qmd"))

document_create_from_tabular(
  df = df_to_upload,
  template_id = "SD377682",
  tags = c("tutorial"),
  attachments = tibble(field = c(4, 4), path = c(attachment_file, matching_code_file))
)
```

## Uploading directly from file

You can also directly upload tabular data from files using the `document_create_from_tabfile()` function.
A small example, with the example data from before:

```{r}
file_name <- "Template_example.csv"
df_to_upload |>
  write_csv(file_name, col_names = FALSE) # the csv should not contain the column names

# now we upload
document_create_from_tabfile(
    path = file_name,
    template_id = "SD377682"
)
```

